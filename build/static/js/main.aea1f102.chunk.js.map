{"version":3,"sources":["Message.js","firebase.js","messengerLogo.png","App.js","reportWebVitals.js","index.js"],"names":["Message","forwardRef","ref","message","isUser","username","className","Card","CardContent","Typography","color","variant","component","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","App","useState","input","setInput","messages","setMessages","setUsername","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","doc","id","data","prompt","src","MessengerLogo","width","height","FormControl","Input","placeholder","value","onChange","event","target","IconButton","disabled","onClick","preventDefault","add","timestamp","FieldValue","serverTimestamp","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gUAqBeA,EAjBCC,sBAAW,WAAsBC,GAAS,IAA7BC,EAA4B,EAA5BA,QACnBC,EAD+C,EAAnBC,WACRF,EAAQE,SAElC,OACI,qBAAKH,IAAKA,EAAKI,UAAS,kBAAaF,GAAU,iBAA/C,SACI,cAACG,EAAA,EAAD,CAAMD,UAAWF,EAAS,oBAAsB,qBAAhD,SACI,cAACI,EAAA,EAAD,UACI,eAACC,EAAA,EAAD,CAAYC,MAAM,QAAQC,QAAQ,QAAQC,UAAU,KAApD,WACMR,GAAD,UAAcD,EAAQE,UAAY,eAAlC,MADL,IAC6DF,EAAQA,oB,QCE1EU,EAZKC,IAASC,cAAc,CACvCC,OAAQ,0CACRC,WAAY,iDACZC,UAAW,iCACXC,cAAe,6CACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGIC,Y,QCZR,MAA0B,0C,yBC8D1BC,MAnDf,WAEE,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOpB,EAAP,KAAiByB,EAAjB,KAsBA,OApBAC,qBAAU,WACRlB,EAAGmB,WAAW,YAAYC,QAAQ,YAAa,QAAQC,YAAW,SAAAC,GAAQ,OACxEN,EAAYM,EAASC,KAAKC,KAAI,SAAAC,GAAG,MAAK,CAACC,GAAKD,EAAIC,GAAIpC,QAASmC,EAAIE,iBAElE,IAEHT,qBAAU,WACRD,EAAYW,OAAO,gCAClB,IAaD,sBAAKnC,UAAU,MAAf,UACE,qBAAKoC,IAAKC,EAAeC,MAAM,MAAMC,OAAO,SAC5C,2DACA,sBAAMvC,UAAU,YAAhB,SACE,eAACwC,EAAA,EAAD,CAAaxC,UAAU,mBAAvB,UACE,cAACyC,EAAA,EAAD,CAAOzC,UAAU,aAAa0C,YAAY,wBAAwBC,MAAOvB,EAAOwB,SAAU,SAAAC,GAAK,OAAExB,EAASwB,EAAMC,OAAOH,UACvH,cAACI,EAAA,EAAD,CAAY/C,UAAU,kBAAkBgD,UAAW5B,EAAOf,QAAQ,YAAYD,MAAM,UAAU6C,QAjBlF,SAACJ,GACnBA,EAAMK,iBACN3C,EAAGmB,WAAW,YAAYyB,IAAI,CAC5BtD,QAAUuB,EACVrB,SAAWA,EACXqD,UAAY5C,IAASS,UAAUoC,WAAWC,oBAE5CjC,EAAS,KAUH,SACE,cAAC,IAAD,WAKN,cAAC,IAAD,UAEIC,EAASS,KAAI,gBAAEE,EAAF,EAAEA,GAAIpC,EAAN,EAAMA,QAAN,OACX,cAAC,EAAD,CAAkBE,SAAUA,EAAUF,QAASA,GAAjCoC,YCzCXsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aea1f102.chunk.js","sourcesContent":["import React, { forwardRef } from 'react';\nimport {Card, CardContent, Typography} from '@material-ui/core';\nimport './Message.css';\n\nconst Message = forwardRef(({message, username}, ref) => {\n    const isUser = username===message.username;\n\n    return (\n        <div ref={ref} className={`message ${isUser && 'message__user'}`}>\n            <Card className={isUser ? \"message__userCard\" : \"message__guestCard\"}>\n                <CardContent>\n                    <Typography color=\"white\" variant=\"body1\" component=\"h6\"> \n                        {!isUser && `${message.username || 'Unknown User'} :` } {message.message}\n                    </Typography>\n                </CardContent>\n            </Card>\n        </div>\n        \n    );\n})\n\nexport default Message;\n","import firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBJKmdX-3IDpQqde24cSBgXuRCAUswEQvk\",\n    authDomain: \"facebook-messenger-clone-f73fa.firebaseapp.com\",\n    projectId: \"facebook-messenger-clone-f73fa\",\n    storageBucket: \"facebook-messenger-clone-f73fa.appspot.com\",\n    messagingSenderId: \"671065266388\",\n    appId: \"1:671065266388:web:a996bb5b5739efbda80341\",\n    measurementId: \"G-NH7HCVTL0D\"\n  });\n\nconst db = firebaseApp.firestore();\n\nexport default db;\n\n","export default __webpack_public_path__ + \"static/media/messengerLogo.947a8427.png\";","import './App.css';\nimport React, {useState, useEffect} from 'react';\nimport { FormControl, Input } from '@material-ui/core';\nimport Message from './Message'\nimport db from './firebase';\nimport firebase from 'firebase';\nimport FlipMove from 'react-flip-move';\nimport MessengerLogo from './messengerLogo.png';\nimport SendIcon from '@material-ui/icons/Send';\nimport { IconButton } from '@material-ui/core';\n\nfunction App() {\n\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const [username, setUsername] = useState(\"\");\n\n  useEffect(() => {\n    db.collection('messages').orderBy('timestamp', 'desc').onSnapshot(snapshot => (\n      setMessages(snapshot.docs.map(doc => ({id : doc.id, message: doc.data()})))\n    ))\n  }, [])\n\n  useEffect(() => {\n    setUsername(prompt('Please enter your name : '));\n  }, [])\n\n  const sendMessage = (event) => {\n    event.preventDefault();\n    db.collection('messages').add({\n      message : input,\n      username : username,\n      timestamp : firebase.firestore.FieldValue.serverTimestamp()\n    });\n    setInput(\"\");\n  }\n\n  return (\n    <div className=\"App\">\n      <img src={MessengerLogo} width=\"250\" height=\"auto\"/>\n      <h1>Facebook Messenger Clone </h1>\n      <form className=\"app__form\">\n        <FormControl className=\"app__formControl\">\n          <Input className=\"app__input\" placeholder=\"Type your message ...\" value={input} onChange={event=>setInput(event.target.value)}/>\n          <IconButton className=\"app__iconButton\" disabled={!input} variant=\"contained\" color=\"primary\" onClick={sendMessage}>\n            <SendIcon/>\n          </IconButton>\n        </FormControl>\n      </form>\n      \n      <FlipMove>\n        {\n          messages.map(({id, message}) => (\n            <Message key={id} username={username} message={message}/>\n          ))\n        }\n      </FlipMove>\n      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}